{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import {Controller} from \"stimulus\"\nclass MultiSelectController extends Controller {\n    static targets = [\"select\", \"input\", \"results\", \"activeItems\", \"field\"]\n    static classes = [\"result\", \"resultSelected\", \"itemActive\"]\n\n    static values = {\n        selectedIndex: Number,\n        isShowing: Boolean,\n        allowDuplicates: Boolean,\n        allowCreatingNewEntries: Boolean\n    }\n\n    connect() {\n        this.selectedIndexValue = -1\n\n        this.selectTarget.classList.add(\"hidden\")\n        this.resultsTarget.tabIndex = 0\n\n        this.inputTarget.setAttribute(\"autocomplete\", \"off\")\n        this.inputTarget.setAttribute(\"spellcheck\", \"false\")\n\n        this.inputTarget.addEventListener('keydown', (e) => this.handleKey(e))\n        this.resultsTarget.addEventListener('keydown', (e) => this.handleKey(e))\n        this.inputTarget.addEventListener('input', (e) => this.handleInputChange(e))\n        this.resultsTarget.addEventListener('click', (e) => this.resultsClick(e))\n\n        this.options.filter(o => o.selected).forEach(o => this.selectItem(o, true))\n    }\n\n    get options() {\n        return Array.apply(null, this.selectTarget.options).filter(o => o.value)\n    }\n\n    get resultsItemCount() {\n        return this.resultsTarget.querySelectorAll(\"li\").length\n    }\n\n    get filteredResults() {\n        const results = this.filterResults(this.inputTarget.value)\n        return results\n    }\n\n    handleKey(e) {\n        switch (e.key) {\n            case \"Escape\":\n                this.isShowingValue = false\n                this.selectedIndexValue = -1\n                break\n\n            case \"ArrowDown\": \n                e.preventDefault()\n                if (this.isShowingValue) {\n                    if (this.selectedIndexValue < this.resultsItemCount - 1) {\n                        this.selectedIndexValue++\n                    }\n                } else {\n                    this.showResults(this.filteredResults)\n                    this.selectedIndexValue = 0\n                }\n\n                break\n\n            case \"ArrowUp\": \n                if (this.isShowingValue && this.selectedIndexValue > 0) {\n                    e.preventDefault()\n                    this.selectedIndexValue--\n                }\n                break\n\n            case \"Enter\":\n                e.preventDefault()\n                if (this.selectedIndexValue > -1 && this.selectedIndexValue < this.resultsItemCount) {\n                    const item = this.filteredResults[this.selectedIndexValue]\n                    this.selectItem(item)\n                } else if (this.allowCreatingNewEntriesValue) {\n                    let trimmedInput = this.inputTarget.value.trim()\n                    if (trimmedInput.length && !this.findOption(trimmedInput)) {\n                        this.createNewEntry(trimmedInput)\n                    }\n                }\n                break\n        }\n    }\n\n    selectItem(item, force) {\n        if (!this.allowDuplicatesValue && item.selected && !force) {\n            return\n        }\n\n        let itemTag = this.createSelectedItemTag(item)\n        this.activeItemsTarget.appendChild(itemTag)\n        item.selected = true\n        this.selectedIndex = -1\n        this.isShowingValue = false\n        this.inputTarget.value = \"\"\n    }\n\n    createNewEntry(text) {\n        let opt = new Option(text, text)\n        this.selectTarget.add(opt, null)\n        this.selectItem(opt)\n    }\n\n    createSelectedItemTag(item) {\n        let template = this.activeItemsTarget.querySelector(\"template\")\n        if (template) {\n            let itemSpan = template.content.cloneNode(true).children[0]\n            itemSpan.querySelector(\"span\").innerText = item.text\n            itemSpan.querySelector(\"button\").addEventListener(\"click\", (e) => {\n                item.selected = false\n                this.activeItemsTarget.removeChild(itemSpan)\n            })\n            return itemSpan\n        } else {\n            let itemSpan = document.createElement(\"span\")\n            const itemActiveClass = this.hasItemActiveClass ? this.itemActiveClass : \"multi-select-item--active\"\n            itemSpan.classList.add(...(itemActiveClass.split(/\\s+/)))\n\n            let itemText = document.createElement(\"span\")\n            itemText.innerText = item.text\n            itemSpan.appendChild(itemText)\n\n            let removeButton = document.createElement(\"span\")\n            removeButton.innerText = \"x\"\n            removeButton.classList.add(\"multi-select-item-remove\")\n            removeButton.addEventListener(\"click\", (e) => {\n                item.selected = false\n                this.activeItemsTarget.removeChild(itemSpan)\n            })\n            itemSpan.appendChild(removeButton)\n\n            return itemSpan\n        }\n    }\n\n    handleInputChange(e) {\n        this.selectedIndexValue = -1\n        this.showResults(this.filteredResults)\n    }\n\n    findOption(value) {\n        return this.options.filter(o => o.value == value)[0]\n    }\n\n    resultsClick(e) {\n        const selectedListItem = e.target.closest('[role=\"option\"]')\n        const option = this.findOption(selectedListItem.dataset.value)\n        if (option) {\n            this.selectItem(option)\n        } else {\n            console.warn(\"Couldn't find option with value: \", selectedListItem.dataset.value)\n        }\n    }\n\n    filterResults(term) {\n        let opts = this.options\n        if (!this.allowDuplicatesValue) {\n            opts = opts.filter(o => !o.selected)\n        }\n\n        if (term === \"\") {\n            return opts\n        }\n\n        let normalize = (s) => {\n            return s.toLowerCase()\n                .replace(/['\"]/, \"\")\n        }\n\n        return opts.filter(o => {\n            return normalize(o.text).indexOf(normalize(term)) > -1\n        })\n    }\n\n    showResults(results) {\n        this.removeChildren(this.resultsTarget)\n        let index = 0\n        let resultItems = results.map(r => this.createResultItem(r.text, r.value, index++))\n        if (resultItems.length > 0) {\n            this.isShowingValue = true\n            resultItems.slice(0, 10).forEach(item => this.resultsTarget.appendChild(item))\n            if (resultItems.length > 10) {\n                this.resultsTarget.appendChild(this.createLoadMoreItem(10))\n            }\n        }\n    }\n\n    createLoadMoreItem(index) {\n        let li = this.createResultItem(\"Moreâ€¦\", null, index)\n        li.dataset.loadMore = true\n        return li\n    }\n\n    createResultItem(result, value, index) {\n        let li = document.createElement(\"li\")\n        li.role = \"option\"\n        if (value) {\n            li.dataset.value = value\n        }\n        li.innerText = result\n        li.dataset.index = index\n        const resultClass = this.hasResultClass ? this.resultClass : \"multi-select-result\"\n        li.classList.add(...(resultClass.split(/\\s+/)))\n        return li\n    }\n    \n    removeChildren(el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild)\n        }\n    }\n\n    isShowingValueChanged() {\n        if (this.isShowingValue) {\n            this.resultsTarget.setAttribute(\"aria-expanded\", \"true\")\n            this.resultsTarget.classList.remove(\"hidden\")\n        } else {\n            this.resultsTarget.setAttribute(\"aria-expanded\", \"true\")\n            this.resultsTarget.classList.add(\"hidden\")\n        }\n    }\n\n    selectedIndexValueChanged() {\n        let lis = this.resultsTarget.querySelectorAll(\"li\")\n        const resultSelectedClass = (this.hasResultSelectedClass ? this.resultSelectedClass : \"multi-select-result--selected\").split(/\\s+/)\n        lis.forEach(li => li.classList.remove(...resultSelectedClass))\n        if (this.selectedIndexValue >= 0 && this.selectedIndexValue < lis.length) {\n            lis[this.selectedIndexValue].classList.add(...resultSelectedClass)\n        } else if (this.selectedIndexValue > 0) {\n            // stay at last element\n            this.selectedIndexValue = lis.length - 1\n        }\n    }\n}\n\nexport default MultiSelectController"],"names":["MultiSelectController","Controller","connect","this","selectedIndexValue","selectTarget","classList","add","resultsTarget","tabIndex","inputTarget","setAttribute","addEventListener","e","handleKey","handleInputChange","resultsClick","options","filter","o","selected","forEach","selectItem","Array","apply","value","resultsItemCount","querySelectorAll","length","filteredResults","filterResults","key","isShowingValue","preventDefault","showResults","allowCreatingNewEntriesValue","trimmedInput","trim","findOption","createNewEntry","item","force","allowDuplicatesValue","itemTag","createSelectedItemTag","activeItemsTarget","appendChild","selectedIndex","text","opt","Option","template","querySelector","itemSpan","content","cloneNode","children","innerText","removeChild","document","createElement","hasItemActiveClass","itemActiveClass","split","itemText","removeButton","selectedListItem","target","closest","option","dataset","console","warn","term","opts","normalize","s","toLowerCase","replace","indexOf","results","removeChildren","index","resultItems","map","r","createResultItem","slice","createLoadMoreItem","li","loadMore","result","role","hasResultClass","resultClass","el","firstChild","isShowingValueChanged","remove","selectedIndexValueChanged","lis","resultSelectedClass","hasResultSelectedClass","targets","classes","values","Number","isShowing","Boolean","allowDuplicates","allowCreatingNewEntries"],"mappings":"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"}